substitutions:
  _PROJECT_ID: 'pfizer-475713'
  _REGISTRY_NAME: 'ci-cd-deployment'
  _REGION: 'europe-west3'
  _SERVICE_NAME: 'backend-core'
  _DB_INSTANCE: 'backend-db'
  _DB_PASS: 'Cv8D!Ud%&&qQ3Dt0o%'
  _DB_NAME: 'db_backend'
  _DB_USER: 'db_backend_user'

steps:
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REGISTRY_NAME}/${_SERVICE_NAME}:latest'
      - '-f'
      - 'backend/Dockerfile'
      - 'backend'

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REGISTRY_NAME}/${_SERVICE_NAME}:latest'

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REGISTRY_NAME}/${_SERVICE_NAME}:latest'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8000'
      - '--add-cloudsql-instances=${_PROJECT_ID}:${_REGION}:${_DB_INSTANCE}'
      - '--set-env-vars=POSTGRES_DB=${_DB_NAME}'
      - '--set-env-vars=POSTGRES_USER=${_DB_USER}'
      - '--set-env-vars=POSTGRES_PASSWORD=${_DB_PASS}'
      - '--set-env-vars=POSTGRES_HOST=/cloudsql/${_PROJECT_ID}:${_REGION}:${_DB_INSTANCE}'
      - '--set-env-vars=POSTGRES_PORT=5432'

images:
  - '${_REGION}-docker.pkg.dev/${_PROJECT_ID}/${_REGISTRY_NAME}/${_SERVICE_NAME}:latest'

timeout: '1800s'

options:
  logging: CLOUD_LOGGING_ONLY